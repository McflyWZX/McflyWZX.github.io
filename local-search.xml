<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Linux学习笔记</title>
    <link href="/2021/10/27/%E5%B5%8C%E5%85%A5%E5%BC%8FLinux/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <url>/2021/10/27/%E5%B5%8C%E5%85%A5%E5%BC%8FLinux/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="Linux学习笔记"><a href="#Linux学习笔记" class="headerlink" title="Linux学习笔记"></a>Linux学习笔记</h1><p>[TOC]</p><h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h2><h3 id="权限相关"><a href="#权限相关" class="headerlink" title="权限相关"></a>权限相关</h3><p><strong>Linux的rwx权限：</strong></p><table><thead><tr><th align="center">d</th><th align="center">r w x</th><th align="center">r w x</th><th align="center">r - -</th></tr></thead><tbody><tr><td align="center">文件类型</td><td align="center">user权限</td><td align="center">group权限</td><td align="center">other权限</td></tr></tbody></table><blockquote><ol><li>文件夹(d)、普通文件(-)、链接(l)、块设备文件(b)、管道文件(p)、字符设备文件(c)、套接口文件(s)</li><li>r：read、w：write、x：excute</li></ol></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">ls -l   <span class="hljs-comment">#列出当前文件夹下所有文件等的权限</span><br><span class="hljs-comment">#out -&gt; drwxrwxr-x 2 mcfly mcfly 4096 10月 22 21:37 new</span><br>sudo chmod 271 xxx   <span class="hljs-comment">#以八进制设置xxx的三组权限</span><br></code></pre></td></tr></table></figure><h3 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a>基本命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">pwd</span><span class="hljs-comment">#打印当前工作目录</span><br>mkdir<span class="hljs-comment">#建立文件夹</span><br>touch<span class="hljs-comment">#建立空白文件</span><br>rm<span class="hljs-comment">#删除文件，-r参数删除文件夹，-rf以递归的方式删除文件夹及其文件</span><br>chmod<span class="hljs-comment">#文件权限修改命令</span><br>find -name xxx<span class="hljs-comment">#查找文件</span><br>mv<span class="hljs-comment">#移动文件或修改文件名</span><br>ctrl c          <span class="hljs-comment">#结束当前进程</span><br></code></pre></td></tr></table></figure><hr><h2 id="FTP"><a href="#FTP" class="headerlink" title="FTP"></a>FTP</h2><h3 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h3><p>基于TCP/IP，可靠。</p><p>FTP使用两个端口号，21口为命令端口，20端口为数据传输端口。</p><h3 id="Linux下架设"><a href="#Linux下架设" class="headerlink" title="Linux下架设"></a>Linux下架设</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt install vsftpd<br>sudo vim /etc/vsftpd.conf<span class="hljs-comment">#修改配置</span><br>sudo /etc/init.d/vsftpd restart<span class="hljs-comment">#启动</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>嵌入式Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo框架基本操作</title>
    <link href="/2021/10/27/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    <url>/2021/10/27/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<h1 id="Hexo基本指令"><a href="#Hexo基本指令" class="headerlink" title="Hexo基本指令"></a>Hexo基本指令</h1><h2 id="参考自：从0开始用Hexo框架搭建个人博客（无坑版）"><a href="#参考自：从0开始用Hexo框架搭建个人博客（无坑版）" class="headerlink" title="参考自：从0开始用Hexo框架搭建个人博客（无坑版）"></a>参考自：<a href="https://zhuanlan.zhihu.com/p/305812430">从0开始用Hexo框架搭建个人博客（无坑版）</a></h2><p><code>hexo init</code>：初始化一个博客</p><p><code>hexo s</code>：在本地启动博客</p><p><code>hexo n &quot;我的第一篇博客文章&quot;</code></p><blockquote><p>发布博客3步走</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs powershell">hexo clean<br>hexo g<br>hexo d<br></code></pre></td></tr></table></figure></blockquote><hr><h1 id="开始搭建"><a href="#开始搭建" class="headerlink" title="开始搭建"></a>开始搭建</h1><ol><li><p>安装node <a href="https://nodejs.org/en/">Node.js (nodejs.org)</a></p></li><li><p>测试：<code>node -v</code>、<code>npm -v</code></p></li><li><p>安装中国源：<code>npm install -g cnpm --registry=https://registry.npm.taobao.org</code></p></li><li><p>测试：<code>cnpm -v</code></p></li><li><p>安装<strong>Hexo</strong>框架：<code>cnpm install -g hexo-cli</code></p></li><li><p>测试：<code>hexo -v</code></p></li><li><p>创建你存放博客的目录，比如：<code>G:\MyBlog</code></p></li><li><p>cd进入你博客的目录，初始化博客：<code>hexo init</code></p></li><li><p>中间操作参考第一章</p></li><li><p>安装 Git 部署的插件：<code>cnpm install --save hexo-deployer-git</code></p></li><li><p>在MyBlog目录下，有一个<code>_config.yml</code>文件，修改最后一行如下，这个文件中还有很多其它配置，请自行查看：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">deploy:</span><br>    <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>    <span class="hljs-attr">repository:</span> <span class="hljs-string">https://github.com/McflyWZX/mcflywzx.github.io.git</span><br>    <span class="hljs-attr">branch:</span> <span class="hljs-string">main</span><br></code></pre></td></tr></table></figure></li><li><p>部署到github.io：<code>hexo d</code></p></li><li><p>好看的 Hexo 主题地址：<code>https://hexo.io/themes/</code></p></li><li><p>下载主题：<code>git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia</code></p></li><li><p>修改<code>_config.yml</code>文件中<code>theme</code>选项</p></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>博客搭建</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LicheePi nano 学习笔记</title>
    <link href="/2021/10/27/%E5%B5%8C%E5%85%A5%E5%BC%8FLinux/%E8%8D%94%E6%9E%9Dpi%20Nano%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <url>/2021/10/27/%E5%B5%8C%E5%85%A5%E5%BC%8FLinux/%E8%8D%94%E6%9E%9Dpi%20Nano%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="LicheePi-Nano"><a href="#LicheePi-Nano" class="headerlink" title="LicheePi Nano"></a>LicheePi Nano</h1><hr><h2 id="2021-9-5-U-BOOT调试成功"><a href="#2021-9-5-U-BOOT调试成功" class="headerlink" title="2021/9/5 U-BOOT调试成功"></a>2021/9/5 U-BOOT调试成功</h2><h3 id="踩坑历程"><a href="#踩坑历程" class="headerlink" title="踩坑历程"></a>踩坑历程</h3><p>首先时它的官方教程，有两个，第一个界面更新，但是bug相关的提示更少，第二个反之。官方教程是学习的主线，但是有些地方有问题，比如u-boot分支的选择。</p><ul><li>[荔枝派官方教程1]: <a href="https://wiki.sipeed.com/soft/Lichee/zh/Nano-Doc-Backup/get_started/first_eat.html">https://wiki.sipeed.com/soft/Lichee/zh/Nano-Doc-Backup/get_started/first_eat.html</a></li><li>[荔枝派官方教程2]: <a href="http://nano.lichee.pro/get_started/first_eye.html">http://nano.lichee.pro/get_started/first_eye.html</a></li></ul><p>关于u-boot分支的选择，官方给出的是<code>git checkout nano-lcd800480</code>，按照教程配置的屏幕细节，但我实际用480-272的屏幕测试时发现先是一个荔枝的图标的一部分，然后各种花屏，最后也没有企鹅图标和基本信息。最致命的是输入<code>bdinfo</code>和<code>printenv</code>指令提示不识别。后来参考:</p><p>发现他用的分支是<code>nano-v2018.01</code>，我按照另一个教程在u-boot控制台输入:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">sf probe 0<br>sf erase 0 0x100000<br>reset<br></code></pre></td></tr></table></figure><p>擦除了spi flash，重新烧录了分支<code>nano-v2018.01</code>出现了和傻瓜包一样的界面，说明应该是成功了，此时我的TF卡已经烧录了linux系统，插上去试了试，可以进系统，成功了。因为后期我们还要倒腾，所以u-boot和linux我们都要从傻瓜包过渡到自己编译烧录的程序。</p><blockquote><p>期间有个有意思的现象，官方教程选择的分支<code>nano-lcd800480</code>里面关于LCD的很多配置已经写好了，但是官方教程有很多关于配置LCD的细节。网友选择的<code>nano-v2018.01</code>分支则需要按照教程手动配置，所以估计原来官方用的就是<code>nano-v2018.01</code>，只是后来不知道为什么改成了<code>nano-lcd800480</code>而且没有仔细测试。</p></blockquote><p>虽然但是，我并没有测试<code>nano-lcd800480</code>能不能正常boot，没准人家只是boot界面没了而已呢</p><h3 id="各种值得注意的问题"><a href="#各种值得注意的问题" class="headerlink" title="各种值得注意的问题"></a>各种值得注意的问题</h3><ol><li><p>切换<code>nano-v2018.01</code>后，<code>make ARCH=arm CROSS_COMPILE=arm-linux-gnueabi- f1c100s_nano_uboot_defconfig</code>指令会报错，你需要更换config文件，改成<code>arm-linux-gnueabi- licheepi_nano_spiflash_defconfig</code></p></li><li><p><code>nano-lcd800480</code>版本的u-boot可以通过擦除spi-flash的命令来重新进入fel模式，但<code>nano-v2018.01</code>版本不行，必须短接flash芯片的CS与GND。其实很好操作，<em>圆点的那个脚(1脚)就是CS，同一排引脚的另一端就是GND</em>，教程说要一边上电一边短接，但我碰着碰撞它就直接重启然后就进fel了，hhh</p></li><li><p>运行控制台，看见有输出是不是特别兴奋？看到登录信息是不是又一脸懵逼？别慌，试试<code>账号:root密码:licheepi</code></p></li><li><p><code>荔枝派通过usb烧录时出现ERROR: Allwinner USB FEL device not found!</code>，这个烧录和测试fel模式功能都要先进fel模式，<strong>不是u-boot</strong></p></li><li><p><code>解决Ubuntu下make error：fatal error: zlib.h: No such file or directory</code></p><p> 运行<code>sudo apt-get install zlib1g-dev</code></p></li><li><p><code>报错：unable to execute ‘swig‘: No such file or directory</code></p><p> 这个也是很简单，运行<code>sudo apt install swig</code></p></li><li><p><code>linux内核编译 fatal error: curses.h: 没有那个文件或目录解决办法</code></p><p> 运行<code>apt-get install libncurses5-dev</code></p></li><li><p>嵌入式系统u-boot编译出现问题</p> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sh">HOSTCC scripts/basic/fixdep<br>/bin/sh: 1: cc: not found<br>scripts/Makefile.host:94: recipe <span class="hljs-keyword">for</span> target ‘scripts/basic/fixdep’ failed<br>make[1]: *** [scripts/basic/fixdep] Error 127<br>Makefile:397: recipe <span class="hljs-keyword">for</span> target ‘scripts_basic’ failed<br>make: *** [scripts_basic] Error 2<br></code></pre></td></tr></table></figure><p> 解决方法还是装库：<code>sudo apt-get install bison</code>和<code>sudo apt-get install flex</code></p></li></ol><hr><h2 id="2021-9-27-21-44-Linux系统编译、运行成功"><a href="#2021-9-27-21-44-Linux系统编译、运行成功" class="headerlink" title="2021/9/27    21:44 Linux系统编译、运行成功"></a>2021/9/27    21:44 Linux系统编译、运行成功</h2><h3 id="SD卡操作"><a href="#SD卡操作" class="headerlink" title="SD卡操作"></a>SD卡操作</h3><blockquote><p>官方引导:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sh">udo fdisk -l     <span class="hljs-comment"># 首先查看电脑上已插入的TF卡的设备号</span><br>sudo umount /dev/sdXx <span class="hljs-comment"># 若自动挂载了TF设备，请先卸载</span><br>sudo fdisk /dev/sdX   <span class="hljs-comment"># 进行分区操作 </span><br><span class="hljs-comment"># 若已存分区即按 d 删除各个分区</span><br><span class="hljs-comment"># 通过 n 新建分区，第一分区暂且申请为32M(足够大了...)，剩下的空间都给第二分区</span><br><span class="hljs-comment"># w 保存写入并退出</span><br>sudo mkfs.vfat /dev/sdX1 <span class="hljs-comment"># 将第一分区格式化成FAT</span><br>sudo mkfs.ext4 /dev/sdX2 <span class="hljs-comment"># 将第一分区格式化成EXT4</span><br></code></pre></td></tr></table></figure></blockquote><p>由于我的卡之前刷了傻瓜包，看样子是要进行一定操作了</p><p>附我的卡的信息:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sh">Disk /dev/sdb：14.86 GiB，15931539456 字节，31116288 个扇区<br>Disk model: SD/MMC/MS PRO   <br>单元：扇区 / 1 * 512 = 512 字节<br>扇区大小(逻辑/物理)：512 字节 / 512 字节<br>I/O 大小(最小/最佳)：512 字节 / 512 字节<br>磁盘标签类型：dos<br>磁盘标识符：0x5f57945f<br><br>设备       启动  起点   末尾   扇区  大小 Id 类型<br>/dev/sdb1        2048  34815  32768   16M  c W95 FAT32 (LBA)<br>/dev/sdb2       34816 409599 374784  183M 83 Linux<br></code></pre></td></tr></table></figure><p>官方推荐参考 <a href="https://github.com/Zepan/ilichee/tree/master/%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6/%E9%95%9C%E5%83%8F%E7%83%A7%E5%86%99">https://github.com/Zepan/ilichee/tree/master/资源文件/镜像烧写</a> 的内容，里面有具体操作</p><p><em>我使用后发现，这个<code>fdisk</code>明令有较多提示，大家可以放心食用</em></p><blockquote><p>为了方便，这里贴上删除分区和创建分区的示例操作(来自官方github)</p><p>删除</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-meta">#!/bin/sh</span><br>sudo fdisk /dev/sdb&lt;&lt;<span class="hljs-string">EOF</span><br><span class="hljs-string">d</span><br><span class="hljs-string">1</span><br><span class="hljs-string">d</span><br><span class="hljs-string">2</span><br><span class="hljs-string">d</span><br><span class="hljs-string">3</span><br><span class="hljs-string">d</span><br><span class="hljs-string">4</span><br><span class="hljs-string">w</span><br><span class="hljs-string">p</span><br><span class="hljs-string">q</span><br><span class="hljs-string">EOF</span><br></code></pre></td></tr></table></figure><p>创建</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs sh">sudo fdisk /dev/sdb &lt;&lt;<span class="hljs-string">EOF</span><br><span class="hljs-string">n</span><br><span class="hljs-string">p</span><br><span class="hljs-string">1</span><br><span class="hljs-string">+16M</span><br><span class="hljs-string">n</span><br><span class="hljs-string">p</span><br><span class="hljs-string">2</span><br><span class="hljs-string">p</span><br><span class="hljs-string">w</span><br><span class="hljs-string">q</span><br><span class="hljs-string">EOF</span><br></code></pre></td></tr></table></figure></blockquote><p>关于文件系统，可以使用<code>df -T /dev/sdbx</code>来看自己到底有没有格式化成功。有时候<code>fdisk</code>提示设备忙，可以试着重新插卡看看。</p><h2 id="主线Linux编译"><a href="#主线Linux编译" class="headerlink" title="主线Linux编译"></a>主线Linux编译</h2><p>小贴士:</p><ol><li>设备树里好像就是描述各种驱动的，例如lcd和flash，但只是名字、GPIO相关的描述，不过其提供了很多通用设备的驱动例如lcd的<code>linux -&gt; drivers -&gt; gpu -&gt; drm -&gt; panel下有许多屏幕的配置，可挑选合适的进行配置</code>。这应该是用<em>Linux的好处</em>之一</li></ol><p>遇到的小问题:</p><ol><li><p><code>fatal error: openssl/bio.h: No such file or directory</code></p><p> 解决:<code>sudo apt-get install libssl-dev</code></p></li><li><p><code>make：arm-linux-gnueabihf-gcc：命令未找到</code></p><p> 这个和之前安装的交叉编译器不一样，运行<code>apt install gcc-arm-linux-gnueabihf</code>来安装。不过这样话说是不是之前的那个交叉编译器也能这么装？</p></li><li><p>在设备树文件发现了有关spi flash型号的定义，以后换了型号可以去这里面改吧，看了一下支持的型号，有:<code>w25q128</code>、<code>xt25f128b</code></p></li><li><p>编译设备树时，一定要回到Linux根目录下编译，不然会提示<code>make: *** 没有规则可制作目标“dtbs”。 停止。</code></p></li><li><p>编译<code>buildroots</code>时，Game底下的app不要选太多了，有些容易编译不过</p></li><li><p>复制、解压完<code>rootfs.tar</code>后，检查<code>/etc</code>底下的<code>inttab</code>文件：</p><p> 把:<code>console::respawn:/sbin/getty -L  console 0 vt100 # GENERIC_SERIAL</code></p><p> 替换成<code>ttyS0::respawn:/sbin/getty -L ttyS0 115200 vt100 # GENERIC_SERIAL</code></p></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>嵌入式Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我的测试文章</title>
    <link href="/2021/10/27/%E6%88%91%E7%9A%84%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/"/>
    <url>/2021/10/27/%E6%88%91%E7%9A%84%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2021/10/27/hello-world/"/>
    <url>/2021/10/27/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><span id="more"></span><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
